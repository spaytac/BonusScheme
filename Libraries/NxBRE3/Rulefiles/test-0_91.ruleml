<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!-- Generated by NxBRE.InferenceEngine.IO.RuleML091NafDatalogAdapter -->
<RuleML xmlns="http://www.ruleml.org/0.91/xsd" xsi:schemaLocation="http://www.ruleml.org/0.91/xsd ruleml-0_91-nafdatalog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <oid>
    <Ind>NxBRE RuleML 0.91 NafDatalog Test File</Ind>
  </oid>
  <!--Queries-->
  <Query>
    <oid>
      <Ind>Safe Room List</Ind>
    </oid>
    <And>
      <Atom>
        <op>
          <Rel>Room In Zone</Rel>
        </op>
        <Var>Room Number</Var>
        <Var>Zone Number</Var>
      </Atom>
      <Or>
        <Atom>
          <op>
            <Rel>Firemen In Room</Rel>
          </op>
          <Var>Room Number</Var>
        </Atom>
        <And>
          <Naf>
            <Atom>
              <op>
                <Rel>Fire Alarm In Room</Rel>
              </op>
              <Var>Room Number</Var>
            </Atom>
          </Naf>
          <Naf>
            <Atom>
              <op>
                <Rel>Alarm Fault In Room</Rel>
              </op>
              <Var>Event Type</Var>
              <Var>Room Number</Var>
            </Atom>
          </Naf>
        </And>
      </Or>
    </And>
  </Query>
  <Query>
    <oid>
      <Ind>Query A and B</Ind>
    </oid>
    <And>
      <Atom>
        <op>
          <Rel>flag</Rel>
        </op>
        <Var>object</Var>
        <Ind>andTestB</Ind>
      </Atom>
      <Atom>
        <op>
          <Rel>flag</Rel>
        </op>
        <Var>object</Var>
        <Ind>andTestA</Ind>
      </Atom>
    </And>
  </Query>
  <Query>
    <oid>
      <Ind>Query A and B and C</Ind>
    </oid>
    <And>
      <Atom>
        <op>
          <Rel>flag</Rel>
        </op>
        <Var>otherObject</Var>
        <Ind>andTestC</Ind>
      </Atom>
      <Atom>
        <op>
          <Rel>flag</Rel>
        </op>
        <Var>object</Var>
        <Ind>andTestB</Ind>
      </Atom>
      <Atom>
        <op>
          <Rel>flag</Rel>
        </op>
        <Var>object</Var>
        <Ind>andTestA</Ind>
      </Atom>
    </And>
  </Query>
  <Query>
    <oid>
      <Ind>Query A</Ind>
    </oid>
    <Atom>
      <op>
        <Rel>flag</Rel>
      </op>
      <Var>object</Var>
      <Ind>triggerQueryA</Ind>
    </Atom>
  </Query>
  <Query>
    <oid>
      <Ind>Query B</Ind>
    </oid>
    <Atom>
      <op>
        <Rel>flag</Rel>
      </op>
      <Var>object</Var>
      <Ind>triggerQueryB</Ind>
    </Atom>
  </Query>
  <Query>
    <oid>
      <Ind>Operator e</Ind>
    </oid>
    <Atom>
      <op>
        <Rel>probe</Rel>
      </op>
      <Var>object</Var>
      <Ind uri="nxbre://operator">Equals(100)</Ind>
    </Atom>
  </Query>
  <Query>
    <oid>
      <Ind>Operator gt</Ind>
    </oid>
    <Atom>
      <op>
        <Rel>probe</Rel>
      </op>
      <Var>object</Var>
      <Ind uri="nxbre://operator">GreaterThan(100)</Ind>
    </Atom>
  </Query>
  <Query>
    <oid>
      <Ind>Operator gte</Ind>
    </oid>
    <Atom>
      <op>
        <Rel>probe</Rel>
      </op>
      <Var>object</Var>
      <Ind uri="nxbre://operator">GreaterThanEqualTo(100)</Ind>
    </Atom>
  </Query>
  <Query>
    <oid>
      <Ind>Operator lt</Ind>
    </oid>
    <Atom>
      <op>
        <Rel>probe</Rel>
      </op>
      <Var>object</Var>
      <Ind uri="nxbre://operator">LessThan(100)</Ind>
    </Atom>
  </Query>
  <Query>
    <oid>
      <Ind>Operator lte</Ind>
    </oid>
    <Atom>
      <op>
        <Rel>probe</Rel>
      </op>
      <Var>object</Var>
      <Ind uri="nxbre://operator">LessThanEqualTo(100)</Ind>
    </Atom>
  </Query>
  <Query>
    <oid>
      <Ind>Operator ne</Ind>
    </oid>
    <Atom>
      <op>
        <Rel>probe</Rel>
      </op>
      <Var>object</Var>
      <Ind uri="nxbre://operator">NotEquals(100)</Ind>
    </Atom>
  </Query>
  <Query>
    <oid>
      <Ind>Operator matches</Ind>
    </oid>
    <Atom>
      <op>
        <Rel>matchesProbe</Rel>
      </op>
      <Var>object</Var>
      <Ind uri="nxbre://operator">Matches(^-?\d+(\.\d{2})?$)</Ind>
    </Atom>
  </Query>
  <Query>
    <oid>
      <Ind>One Atom Var-less</Ind>
    </oid>
    <Atom>
      <op>
        <Rel>varless.value</Rel>
      </op>
      <Ind uri="nxbre://operator">GreaterThan(C)</Ind>
    </Atom>
  </Query>
  <Query>
    <oid>
      <Ind>Two Atoms Var-less</Ind>
    </oid>
    <And>
      <Atom>
        <op>
          <Rel>varless.value</Rel>
        </op>
        <Ind uri="nxbre://operator">GreaterThan(C)</Ind>
      </Atom>
      <Atom>
        <op>
          <Rel>varless.value</Rel>
        </op>
        <Ind uri="nxbre://operator">GreaterThanEqualTo(A)</Ind>
      </Atom>
    </And>
  </Query>
  <Query>
    <oid>
      <Ind>Two Atoms</Ind>
    </oid>
    <And>
      <Atom>
        <op>
          <Rel>varless.value</Rel>
        </op>
        <Ind uri="nxbre://operator">GreaterThan(C)</Ind>
      </Atom>
      <Atom>
        <op>
          <Rel>varless.value</Rel>
        </op>
        <Var>Whatever</Var>
      </Atom>
    </And>
  </Query>
  <Query>
    <oid>
      <Ind>Expression in Atom Relation</Ind>
    </oid>
    <And>
      <Atom>
        <op>
          <Rel>Contract Details</Rel>
        </op>
        <Var>Reference</Var>
        <Var>Date</Var>
      </Atom>
      <Atom>
        <op>
          <Rel uri="nxbre://expression">{var:Date} &lt; System.DateTime.Now</Rel>
        </op>
        <Var>Date</Var>
      </Atom>
    </And>
  </Query>
  <Query>
    <oid>
      <Ind>Expression in Individual Evaluation</Ind>
    </oid>
    <Atom>
      <op>
        <Rel>talking</Rel>
      </op>
      <Var>character</Var>
      <Ind uri="nxbre://expression">{ind}.StartsWith("hello")</Ind>
    </Atom>
  </Query>
  <Assert>
    <Entails>
      <Rulebase>
        <!--Implications-->
        <Implies>
          <oid>
            <Ind>Recommend</Ind>
          </oid>
          <body>
            <Atom>
              <op>
                <Rel>want to review</Rel>
              </op>
              <Var>you</Var>
              <Ind>rule principles</Ind>
            </Atom>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>may look at</Rel>
              </op>
              <Var>you</Var>
              <Ind uri="http://www.cs.brandeis.edu/...">Rule-Based Systems</Ind>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>Test A and B or C</Ind>
          </oid>
          <body>
            <And>
              <Atom>
                <op>
                  <Rel>id</Rel>
                </op>
                <Var>account</Var>
                <Ind uri="nxbre://operator">LessThan(500)</Ind>
              </Atom>
              <Or>
                <Atom>
                  <op>
                    <Rel>balance</Rel>
                  </op>
                  <Var>account</Var>
                  <Ind uri="nxbre://operator">GreaterThanEqualTo(100)</Ind>
                </Atom>
                <Atom>
                  <op>
                    <Rel>balance</Rel>
                  </op>
                  <Var>account</Var>
                  <Ind uri="nxbre://operator">LessThanEqualTo(50)</Ind>
                </Atom>
              </Or>
            </And>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>testAandBorC</Rel>
              </op>
              <Var>account</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>Test B or C and A</Ind>
          </oid>
          <body>
            <And>
              <Atom>
                <op>
                  <Rel>id</Rel>
                </op>
                <Var>account</Var>
                <Ind uri="nxbre://operator">LessThan(500)</Ind>
              </Atom>
              <Or>
                <Atom>
                  <op>
                    <Rel>balance</Rel>
                  </op>
                  <Var>account</Var>
                  <Ind uri="nxbre://operator">LessThanEqualTo(50)</Ind>
                </Atom>
                <Atom>
                  <op>
                    <Rel>balance</Rel>
                  </op>
                  <Var>account</Var>
                  <Ind uri="nxbre://operator">GreaterThanEqualTo(100)</Ind>
                </Atom>
              </Or>
            </And>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>testCorBandA</Rel>
              </op>
              <Var>account</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>label:Test A or D and E and B or C;priority:95;</Ind>
          </oid>
          <body>
            <And>
              <Atom>
                <op>
                  <Rel>testCorBandA</Rel>
                </op>
                <Var>account</Var>
              </Atom>
              <Or>
                <Atom>
                  <op>
                    <Rel>balance</Rel>
                  </op>
                  <Var>account</Var>
                  <Ind uri="nxbre://operator">GreaterThanEqualTo(1000)</Ind>
                </Atom>
                <Atom>
                  <op>
                    <Rel>balance</Rel>
                  </op>
                  <Var>account</Var>
                  <Ind uri="nxbre://operator">LessThanEqualTo(50)</Ind>
                </Atom>
              </Or>
              <Or>
                <Atom>
                  <op>
                    <Rel>testAandBorC</Rel>
                  </op>
                  <Var>account</Var>
                </Atom>
                <Atom>
                  <op>
                    <Rel>id</Rel>
                  </op>
                  <Var>account</Var>
                  <Ind uri="nxbre://operator">LessThan(5)</Ind>
                </Atom>
              </Or>
            </And>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>testAorDandEandBorC</Rel>
              </op>
              <Var>account</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>label:Test A and F or G or A and G;priority:100;</Ind>
          </oid>
          <body>
            <Or>
              <Atom>
                <op>
                  <Rel>balance</Rel>
                </op>
                <Var>account</Var>
                <Ind uri="nxbre://operator">GreaterThan(100)</Ind>
              </Atom>
              <And>
                <Atom>
                  <op>
                    <Rel>balance</Rel>
                  </op>
                  <Var>account</Var>
                  <Ind uri="nxbre://operator">GreaterThan(100)</Ind>
                </Atom>
                <Atom>
                  <op>
                    <Rel>id</Rel>
                  </op>
                  <Var>account</Var>
                  <Ind uri="nxbre://operator">LessThan(500)</Ind>
                </Atom>
              </And>
              <And>
                <Atom>
                  <op>
                    <Rel>testAorDandEandBorC</Rel>
                  </op>
                  <Var>account</Var>
                </Atom>
                <Atom>
                  <op>
                    <Rel>id</Rel>
                  </op>
                  <Var>account</Var>
                  <Ind uri="nxbre://operator">LessThan(500)</Ind>
                </Atom>
              </And>
            </Or>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>testAandForGorAandG</Rel>
              </op>
              <Var>account</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>Test A and B</Ind>
          </oid>
          <body>
            <And>
              <Atom>
                <op>
                  <Rel>flag</Rel>
                </op>
                <Var>object</Var>
                <Ind>andTestB</Ind>
              </Atom>
              <Atom>
                <op>
                  <Rel>flag</Rel>
                </op>
                <Var>object</Var>
                <Ind>andTestA</Ind>
              </Atom>
            </And>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>testAandB</Rel>
              </op>
              <Var>object</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>Test B and C</Ind>
          </oid>
          <body>
            <And>
              <Atom>
                <op>
                  <Rel>flag</Rel>
                </op>
                <Var>object</Var>
                <Ind>andTestC</Ind>
              </Atom>
              <Atom>
                <op>
                  <Rel>flag</Rel>
                </op>
                <Var>object</Var>
                <Ind>andTestB</Ind>
              </Atom>
            </And>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>testBandC</Rel>
              </op>
              <Var>object</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>Test Strict Imp</Ind>
          </oid>
          <body>
            <Or>
              <Atom>
                <op>
                  <Rel>flagStrictB</Rel>
                </op>
                <Var>valueA</Var>
                <Var>valueB</Var>
              </Atom>
              <Atom>
                <op>
                  <Rel>flagStrictA</Rel>
                </op>
                <Var>valueA</Var>
              </Atom>
            </Or>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>testStrict</Rel>
              </op>
              <Var>valueA</Var>
              <Var>valueB</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>Test B or C</Ind>
          </oid>
          <body>
            <Or>
              <Atom>
                <op>
                  <Rel>flag</Rel>
                </op>
                <Var>object</Var>
                <Ind>andTestC</Ind>
              </Atom>
              <Atom>
                <op>
                  <Rel>flag</Rel>
                </op>
                <Var>object</Var>
                <Ind>andTestB</Ind>
              </Atom>
            </Or>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>testBorC</Rel>
              </op>
              <Var>object</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>Medium</Ind>
          </oid>
          <body>
            <Atom>
              <op>
                <Rel>flag</Rel>
              </op>
              <Var>object</Var>
              <Ind>testPriority</Ind>
            </Atom>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>mediumImpl</Rel>
              </op>
              <Var>object</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>label:Lower;priority:20;</Ind>
          </oid>
          <body>
            <Atom>
              <op>
                <Rel>flag</Rel>
              </op>
              <Var>object</Var>
              <Ind>testPriority</Ind>
            </Atom>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>lowerImpl</Rel>
              </op>
              <Var>object</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>label:Higher;priority:80;</Ind>
          </oid>
          <body>
            <Atom>
              <op>
                <Rel>flag</Rel>
              </op>
              <Var>object</Var>
              <Ind>testPriority</Ind>
            </Atom>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>higherImpl</Rel>
              </op>
              <Var>object</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>label:Mutex Trigger;priority:100;</Ind>
          </oid>
          <body>
            <Atom>
              <op>
                <Rel>flag</Rel>
              </op>
              <Var>object</Var>
              <Ind>mutexLock</Ind>
            </Atom>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>mutexLocked</Rel>
              </op>
              <Var>object</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>label:Rule A;mutex:Mutex Trigger;</Ind>
          </oid>
          <body>
            <Atom>
              <op>
                <Rel>flag</Rel>
              </op>
              <Var>object</Var>
              <Ind>triggeredA</Ind>
            </Atom>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>mutexA</Rel>
              </op>
              <Var>object</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>label:Rule B;mutex:Mutex Trigger;</Ind>
          </oid>
          <body>
            <Atom>
              <op>
                <Rel>flag</Rel>
              </op>
              <Var>object</Var>
              <Ind>triggeredB</Ind>
            </Atom>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>mutexB</Rel>
              </op>
              <Var>object</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>label:Rule C;priority:75;mutex:Rule A;</Ind>
          </oid>
          <body>
            <Atom>
              <op>
                <Rel>flag</Rel>
              </op>
              <Var>object</Var>
              <Ind>triggeredC</Ind>
            </Atom>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>mutexC</Rel>
              </op>
              <Var>object</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>Precondition Trigger</Ind>
          </oid>
          <body>
            <Atom>
              <op>
                <Rel>flag</Rel>
              </op>
              <Var>object</Var>
              <Ind>preconditionTrigger</Ind>
            </Atom>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>preconditionTriggered</Rel>
              </op>
              <Var>object</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>label:Rule X;precondition:Rule Z;</Ind>
          </oid>
          <body>
            <Atom>
              <op>
                <Rel>flag</Rel>
              </op>
              <Var>object</Var>
              <Ind>triggeredX</Ind>
            </Atom>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>preconditionX</Rel>
              </op>
              <Var>object</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>label:Rule Y;priority:25;precondition:Precondition Trigger;</Ind>
          </oid>
          <body>
            <Atom>
              <op>
                <Rel>flag</Rel>
              </op>
              <Var>object</Var>
              <Ind>triggeredY</Ind>
            </Atom>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>preconditionY</Rel>
              </op>
              <Var>object</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>label:Rule Z;precondition:Precondition Trigger;</Ind>
          </oid>
          <body>
            <Atom>
              <op>
                <Rel>flag</Rel>
              </op>
              <Var>object</Var>
              <Ind>triggeredZ</Ind>
            </Atom>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>preconditionZ</Rel>
              </op>
              <Var>object</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>Query C and A and B</Ind>
          </oid>
          <body>
            <And>
              <Atom>
                <op>
                  <Rel>flag</Rel>
                </op>
                <Var>object</Var>
                <Ind>triggerQueryB</Ind>
              </Atom>
              <Atom>
                <op>
                  <Rel>flag</Rel>
                </op>
                <Var>object</Var>
                <Ind>triggerQueryA</Ind>
              </Atom>
              <Atom>
                <op>
                  <Rel>flag</Rel>
                </op>
                <Var>object</Var>
                <Ind>triggerQueryC</Ind>
              </Atom>
            </And>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>queryRef</Rel>
              </op>
              <Var>object</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <body>
            <And>
              <Atom>
                <op>
                  <Rel>balance</Rel>
                </op>
                <Var>account</Var>
                <Ind>actualValue</Ind>
                <Var>amount</Var>
              </Atom>
              <Atom>
                <op>
                  <Rel>balance</Rel>
                </op>
                <Var>account</Var>
                <Ind>expectedValue</Ind>
                <Var>amount</Var>
              </Atom>
            </And>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>isValid</Rel>
              </op>
              <Var>account</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <body>
            <Atom>
              <op>
                <Rel>balance</Rel>
              </op>
              <Var>account</Var>
              <Ind>actualValue</Ind>
              <Ind>25</Ind>
            </Atom>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>isTwentyFive</Rel>
              </op>
              <Var>account</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>label:No Action Implication;action:none;</Ind>
          </oid>
          <body>
            <Atom>
              <op>
                <Rel>noopTrigger</Rel>
              </op>
              <Ind>foo</Ind>
            </Atom>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>doNotAssert</Rel>
              </op>
              <Ind>bar</Ind>
            </Atom>
          </head>
        </Implies>
				<Implies>
					<oid>
						<Ind>label:No Action Implication Checker;precondition:No Action Implication;</Ind>
					</oid>
          <body>
            <Atom>
              <op>
                <Rel>noopTrigger</Rel>
              </op>
              <Ind>foo</Ind>
            </Atom>
          </body>
					<head>
						<Atom>
							<op>
								<Rel>noopPreconditioned</Rel>
							</op>
							<Ind>OK</Ind>
						</Atom>
					</head>
				</Implies>
        <Implies>
          <oid>
            <Ind>label:Retracting Implication;action:retract;</Ind>
          </oid>
          <body>
            <Atom>
              <op>
                <Rel>retractionTrigger</Rel>
              </op>
              <Var>target</Var>
            </Atom>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>toRetract</Rel>
              </op>
              <Var>target</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>label:Retracting Implication Checker;precondition:Retracting Implication;</Ind>
          </oid>
          <body>
            <Atom>
              <op>
                <Rel>retractionTrigger</Rel>
              </op>
              <Var>target</Var>
            </Atom>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>retractionConfirmation</Rel>
              </op>
              <Var>target</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>One Atom Var-less</Ind>
          </oid>
          <body>
            <Atom>
              <op>
                <Rel>varless.value</Rel>
              </op>
              <Ind uri="nxbre://operator">GreaterThan(C)</Ind>
            </Atom>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>first.deduction</Rel>
              </op>
              <Ind>correct</Ind>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>Incorrect One Atom Var-less</Ind>
          </oid>
          <body>
            <Atom>
              <op>
                <Rel>varless.value</Rel>
              </op>
              <Ind uri="nxbre://operator">GreaterThan(Z)</Ind>
            </Atom>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>second.deduction</Rel>
              </op>
              <Ind>incorrect</Ind>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>Two Atoms Var-less</Ind>
          </oid>
          <body>
            <And>
              <Atom>
                <op>
                  <Rel>varless.value</Rel>
                </op>
                <Ind uri="nxbre://operator">GreaterThan(C)</Ind>
              </Atom>
              <Atom>
                <op>
                  <Rel>varless.value</Rel>
                </op>
                <Var>Whatever</Var>
              </Atom>
            </And>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>third.deduction</Rel>
              </op>
              <Ind>correct</Ind>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>Two Atoms</Ind>
          </oid>
          <body>
            <And>
              <Atom>
                <op>
                  <Rel>varless.value</Rel>
                </op>
                <Ind uri="nxbre://operator">GreaterThan(C)</Ind>
              </Atom>
              <Atom>
                <op>
                  <Rel>varless.value</Rel>
                </op>
                <Var>Whatever</Var>
              </Atom>
            </And>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>forth.deduction</Rel>
              </op>
              <Ind>correct</Ind>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>Test Atom Function Relation</Ind>
          </oid>
          <body>
            <And>
              <Atom>
                <op>
                  <Rel>Result Count</Rel>
                </op>
                <Var>Value</Var>
                <Ind>Passed</Ind>
              </Atom>
              <Atom>
                <op>
                  <Rel>Minimum Passed</Rel>
                </op>
                <Var>Threshold</Var>
              </Atom>
              <Atom>
                <op>
                  <Rel uri="nxbre://operator">GreaterThanEqualTo</Rel>
                </op>
                <Var>Value</Var>
                <Var>Threshold</Var>
              </Atom>
            </And>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>Success</Rel>
              </op>
              <Var>Value</Var>
              <Ind>Failed</Ind>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>Test Or Naf Combination</Ind>
          </oid>
          <body>
            <And>
              <Atom>
                <op>
                  <Rel>CheckProductInfo</Rel>
                </op>
                <Ind>true</Ind>
              </Atom>
              <Or>
                <Naf>
                  <Atom>
                    <op>
                      <Rel>regular</Rel>
                    </op>
                    <Var>product</Var>
                  </Atom>
                </Naf>
                <Naf>
                  <Atom>
                    <op>
                      <Rel>luxury</Rel>
                    </op>
                    <Var>product</Var>
                  </Atom>
                </Naf>
              </Or>
            </And>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>NotAllCategoriesCovered</Rel>
              </op>
              <Ind>true</Ind>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>label:Modifying Implication;action:modify;</Ind>
          </oid>
          <body>
            <And>
              <Atom>
                <op>
                  <Rel>modifyTrigger</Rel>
                </op>
                <Var>trigger</Var>
                <Var>target</Var>
              </Atom>
              <Atom>
                <op>
                  <Rel>modifyTarget</Rel>
                </op>
                <Var>target</Var>
                <Ind>before</Ind>
              </Atom>
            </And>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>modifyTarget</Rel>
              </op>
              <Var>target</Var>
              <Ind>after</Ind>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>Naf match atom problem (bug 1332214)</Ind>
          </oid>
          <body>
            <And>
              <Atom>
                <op>
                  <Rel>naf-switch</Rel>
                </op>
                <Var>index</Var>
                <Ind>pivot</Ind>
                <Var>value</Var>
              </Atom>
              <Atom>
                <op>
                  <Rel>naf-probe</Rel>
                </op>
                <Var>index</Var>
                <Var>content</Var>
              </Atom>
              <Naf>
                <Atom>
                  <op>
                    <Rel>naf-switch</Rel>
                  </op>
                  <Var>index</Var>
                  <Ind>pivot</Ind>
                  <Ind>foo</Ind>
                </Atom>
              </Naf>
            </And>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>naf-matched</Rel>
              </op>
              <Var>index</Var>
              <Var>value</Var>
              <Ind>success</Ind>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>Atom Combination Bug 1346078</Ind>
          </oid>
          <body>
            <And>
              <Atom>
                <op>
                  <Rel>trigger-atom-combination</Rel>
                </op>
                <Var>stringA</Var>
                <Ind>bar</Ind>
              </Atom>
              <Atom>
                <op>
                  <Rel>trigger-atom-combination</Rel>
                </op>
                <Var>stringB</Var>
                <Ind>bar</Ind>
              </Atom>
            </And>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>result</Rel>
              </op>
              <Var>stringA</Var>
              <Var>stringB</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>Expression Assertion Implication</Ind>
          </oid>
          <body>
            <Atom>
              <op>
                <Rel>expressionAssertionTrigger</Rel>
              </op>
              <Var>intA</Var>
              <Var>intB</Var>
            </Atom>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>expressionAssertionResults</Rel>
              </op>
              <Ind uri="nxbre://expression">{var:intA}+5*{var:intB}</Ind>
              <Ind>done</Ind>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>label:Msg DJours (for bug #1252700);priority:70;</Ind>
          </oid>
          <body>
            <Atom>
              <op>
                <Rel>ClientNum</Rel>
              </op>
              <Ind>D16.0</Ind>
              <Var>clientNb</Var>
              <Ind>366</Ind>
            </Atom>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>ClientMess</Rel>
              </op>
              <Ind>Title</Ind>
              <Var>clientNb</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>label:Sum D16.0 (for bug #1252700);priority:30;action:modify;</Ind>
          </oid>
          <body>
            <Atom>
              <op>
                <Rel>ClientNum</Rel>
              </op>
              <Ind>D16.0</Ind>
              <Var>staffNb</Var>
              <Var>jours</Var>
            </Atom>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>SumD16.0</Rel>
              </op>
              <Ind uri="nxbre://expression">({predicate:0} + {var:jours})</Ind>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>label:Compute Next Due Date;action:modify;</Ind>
          </oid>
          <body>
            <And>
              <Atom>
                <op>
                  <Rel>Contract Details</Rel>
                </op>
                <Var>Reference</Var>
                <Var>Date</Var>
                <Var>Period Months</Var>
              </Atom>
              <Atom>
                <op>
                  <Rel uri="nxbre://expression">System.DateTime.Now &gt; {var:Date}</Rel>
                </op>
                <Var>Date</Var>
              </Atom>
            </And>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>Contract Details</Rel>
              </op>
              <Var>Reference</Var>
              <Ind uri="nxbre://expression">{var:Date}.AddMonths({var:Period Months})</Ind>
              <Var>Period Months</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>polite education</Ind>
          </oid>
          <body>
            <Atom>
              <op>
                <Rel>talking</Rel>
              </op>
              <Var>character</Var>
              <Ind uri="nxbre://expression">{ind}.StartsWith("hello")</Ind>
            </Atom>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>education</Rel>
              </op>
              <Var>character</Var>
              <Ind>polite</Ind>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>Regression test for bug #1358781</Ind>
          </oid>
          <body>
            <And>
              <Or>
                <Atom>
                  <op>
                    <Rel>dog</Rel>
                  </op>
                  <Var>Animal</Var>
                  <Ind>Black</Ind>
                </Atom>
                <Atom>
                  <op>
                    <Rel>dog</Rel>
                  </op>
                  <Var>Animal</Var>
                  <Ind>White</Ind>
                </Atom>
              </Or>
              <Or>
                <Atom>
                  <op>
                    <Rel>cat</Rel>
                  </op>
                  <Var>Animal</Var>
                  <Ind>Brown</Ind>
                </Atom>
                <Atom>
                  <op>
                    <Rel>bird</Rel>
                  </op>
                  <Var>Animal</Var>
                  <Ind>Red</Ind>
                </Atom>
              </Or>
            </And>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>result</Rel>
              </op>
              <Var>Animal</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <body>
            <And>
              <Atom>
                <op>
                  <Rel>own</Rel>
                </op>
                <Var>person</Var>
                <Var>object</Var>
              </Atom>
              <Naf>
                <Atom>
                  <op>
                    <Rel>bought</Rel>
                  </op>
                  <Var>person</Var>
                  <Var>object</Var>
                </Atom>
              </Naf>
            </And>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>gift</Rel>
              </op>
              <Var>person</Var>
              <Var>object</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>Slot test</Ind>
          </oid>
          <body>
            <Atom>
              <op>
                <Rel>success</Rel>
              </op>
              <Var>employee</Var>
              <slot>
                <Ind>just a testing slot</Ind>
                <Var>score</Var>
              </slot>
            </Atom>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>bonus</Rel>
              </op>
              <Var>employee</Var>
              <slot>
                <Ind>amount</Ind>
                <Ind uri="nxbre://expression">{var:score}*3</Ind>
              </slot>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>Regression test for bug #1469851</Ind>
          </oid>
          <body>
            <And>
              <Atom>
                <op>
                  <Rel>Threshold-Check</Rel>
                </op>
                <Var>id</Var>
                <Var>value-to-check</Var>
              </Atom>
              <Atom>
                <op>
                  <Rel uri="nxbre://operator">GreaterThan</Rel>
                </op>
                <Var>value-to-check</Var>
                <Data xsi:type="xs:int">25</Data>
              </Atom>
            </And>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>Threshold-Result</Rel>
              </op>
              <Var>id</Var>
              <Var>value-to-check</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>Slot contributing named value - RFE #1483072</Ind>
          </oid>
          <body>
            <Atom>
              <op>
                <Rel>Slot-Threshold-Check</Rel>
              </op>
              <Var>id</Var>
              <slot>
                <Ind>value-to-check</Ind>
                <Ind uri="nxbre://operator">GreaterThan(25)</Ind>
              </slot>
            </Atom>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>Slot-Threshold-Result</Rel>
              </op>
              <Var>id</Var>
              <Var>value-to-check</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>Slot value accessible in expression - RFE #1483072</Ind>
          </oid>
          <body>
            <Atom>
              <op>
                <Rel>success</Rel>
              </op>
              <Var>employee</Var>
              <slot>
                <Ind>distance</Ind>
                <Ind uri="nxbre://operator">GreaterThan(999)</Ind>
              </slot>
            </Atom>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>miles</Rel>
              </op>
              <Var>employee</Var>
              <Ind uri="nxbre://expression">{var:distance}*5</Ind>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>First regression test for Bug #1470721 and RFE #1483072</Ind>
          </oid>
          <body>
            <And>
              <Atom>
                <op>
                  <Rel>Slot-Threshold-Result</Rel>
                </op>
                <slot>
                  <Ind>the-id</Ind>
                  <Ind>PASS</Ind>
                </slot>
                <slot>
                  <Ind>the-value</Ind>
                  <Data xsi:type="xs:int">50</Data>
                </slot>
              </Atom>
              <Atom>
                <op>
                  <Rel>Slot-Contribution</Rel>
                </op>
                <Ind>SUCCESS</Ind>
                <Var>the-id</Var>
                <Var>the-value</Var>
              </Atom>
            </And>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>Slot-Contribution-Result</Rel>
              </op>
              <Var>the-id</Var>
              <Var>the-value</Var>
            </Atom>
          </head>
        </Implies>
        <Implies>
          <oid>
            <Ind>Second regression test for Bug #1470721 and RFE #1483072</Ind>
          </oid>
          <body>
            <And>
              <Atom>
                <op>
                  <Rel>Slot-Threshold-Result</Rel>
                </op>
                <slot>
                  <Ind>the-id</Ind>
                  <Ind>PASS</Ind>
                </slot>
                <slot>
                  <Ind>the-value</Ind>
                  <Ind uri="nxbre://expression">50d</Ind>
                </slot>
              </Atom>
              <Atom>
                <op>
                  <Rel>Slot-Contribution</Rel>
                </op>
                <Ind>SUCCESS</Ind>
                <Var>the-id</Var>
                <Var>the-value</Var>
              </Atom>
            </And>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>Slot-Contribution-Result-Bis</Rel>
              </op>
              <Var>the-id</Var>
              <Var>the-value</Var>
            </Atom>
          </head>
        </Implies>
				<Implies>
					<oid>
						<Ind>Test Labeled Deducted Fact</Ind>
					</oid>
					<body>
						<Atom>
							<op>
								<Rel>TriggerLabeledFact</Rel>
							</op>
							<Var>Whatever</Var>
						</Atom>
					</body>
					<head>
						<Atom>
							<oid>
								<Ind>Deducted Fact Label</Ind>
							</oid>
							<op>
								<Rel>LabeledFact</Rel>
							</op>
							<Var>Whatever</Var>
						</Atom>
					</head>
				</Implies>
        <!--Equivalents-->
        <Equivalent>
          <Atom>
            <op>
              <Rel>own</Rel>
            </op>
            <Var>person</Var>
            <Var>stuff</Var>
          </Atom>
          <Atom>
            <op>
              <Rel>belongs</Rel>
            </op>
            <Var>stuff</Var>
            <Var>person</Var>
          </Atom>
        </Equivalent>
        <Equivalent>
          <oid>
            <Ind>Possession and belonging equivalence</Ind>
          </oid>
          <Atom>
            <op>
              <Rel>possess</Rel>
            </op>
            <Var>person</Var>
            <Var>stuff</Var>
          </Atom>
          <Atom>
            <op>
              <Rel>belongs</Rel>
            </op>
            <Var>stuff</Var>
            <Var>person</Var>
          </Atom>
        </Equivalent>
        <Equivalent>
          <Atom>
            <op>
              <Rel>bought</Rel>
            </op>
            <Var>someone</Var>
            <Var>thing</Var>
          </Atom>
          <Atom>
            <op>
              <Rel>sold</Rel>
            </op>
            <Var>thing</Var>
            <Var>someone</Var>
          </Atom>
        </Equivalent>
        <!--Facts-->
        <Atom>
          <oid>
            <Ind>Porsche Luxury</Ind>
          </oid>
          <op>
            <Rel>luxury</Rel>
          </op>
          <Ind>Porsche</Ind>
        </Atom>
        <Atom>
          <op>
            <Rel>spending</Rel>
          </op>
          <Ind>Peter Miller</Ind>
          <Ind>min 5000 euro</Ind>
          <Ind>previous year</Ind>
        </Atom>
        <Atom>
          <oid>
            <Ind>Honda Regular</Ind>
          </oid>
          <op>
            <Rel>regular</Rel>
          </op>
          <Ind>Honda</Ind>
        </Atom>
      </Rulebase>
      <Rulebase>
        <!--Integrity Queries-->
        <Implies>
          <oid>
            <Ind>An object can not be gold and rusty</Ind>
          </oid>
          <body>
            <Or>
              <And>
                <Atom>
                  <op>
                    <Rel>gold</Rel>
                  </op>
                  <Var>object</Var>
                </Atom>
                <Naf>
                  <Atom>
                    <op>
                      <Rel>rusty</Rel>
                    </op>
                    <Var>object</Var>
                  </Atom>
                </Naf>
              </And>
              <And>
                <Naf>
                  <Atom>
                    <op>
                      <Rel>gold</Rel>
                    </op>
                    <Var>object</Var>
                  </Atom>
                </Naf>
                <Atom>
                  <op>
                    <Rel>rusty</Rel>
                  </op>
                  <Var>object</Var>
                </Atom>
              </And>
              <And>
                <Naf>
                  <Atom>
                    <op>
                      <Rel>gold</Rel>
                    </op>
                    <Var>object</Var>
                  </Atom>
                </Naf>
                <Naf>
                  <Atom>
                    <op>
                      <Rel>rusty</Rel>
                    </op>
                    <Var>object</Var>
                  </Atom>
                </Naf>
              </And>
            </Or>
          </body>
          <head>
            <Atom>
              <op>
                <Rel>_ignored_</Rel>
              </op>
            </Atom>
          </head>
        </Implies>
      </Rulebase>
    </Entails>
  </Assert>
</RuleML>